apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:4.4
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 250m
              memory: 256Mi
          ports:
            - containerPort: 27017
              name: mongodb
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
spec:
  ports:
    - port: 27017
  selector:
    app: mongodb

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: redis
          image: docker.io/redis:7.0.5
          env:
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 250m
              memory: 256Mi
          ports:
            - containerPort: 6379
              name: redis
---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  ports:
    - port: 6379
  selector:
    app: redis
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: azure-managed-disk
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: azurefile
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-scc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app-scc
  template:
    metadata:
      labels:
        app: app-scc
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: app-scc
          image: pedrocarlos57778/app-scc:latest
          imagePullPolicy: Always
          volumeMounts: #code for DISK in app
            - mountPath: "/mnt/vol"                #code for DISK in app
              name: mediavolume                       #code for DISK in app
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 250m
              memory: 256Mi
          ports:
            - containerPort: 8080
          env:
            - name: REDIS
              value: "redis-app"
            - name: MONGODB
              value: "mongodb:27017"
      volumes: #code for DISK in app
        - name: mediavolume                           #code for DISK in app
          persistentVolumeClaim: #code for DISK in app
            claimName: azure-managed-disk             #code for DISK in app
---
apiVersion: v1
kind: Service
metadata:
  name: app-scc
spec:
  type: LoadBalancer
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: app-scc


